
var Controls = new PlayerInput();
Controls.Player.SetCallbacks(this);

var State = new InputState(Controls, Controls.GamepadScheme);
var State = new InputState(Controls, Controls.KeyboardMouseScheme);

public void OnMove(InputAction.CallbackContext context)
{
    State.JoystickLeft = context.ReadValue<Vector2>();
}

public void OnLook(InputAction.CallbackContext context)
{
    State.JoystickRight = context.ReadValue<Vector2>();
}

public void OnJump(InputAction.CallbackContext context)
{
    State.ButtonSouth = context.performed || context.started;
}

Swapping Player Input
if (_state)
{
    var temp = Game.InputService[1];
    Game.InputService[1] = Game.InputService[2];
    Game.InputService[2] = temp;
    //if (Game.IsSingleplayer)
    Game.PlayerOwnershipService.Toggle(1, false);
    Game.PlayerOwnershipService.Toggle(2, true);
}
else
{
    var temp = Game.InputService[2];
    Game.InputService[2] = Game.InputService[1];
    Game.InputService[1] = temp;
    //if (Game.IsSingleplayer)
    Game.PlayerOwnershipService.Toggle(1, true);
    Game.PlayerOwnershipService.Toggle(2, false);
}